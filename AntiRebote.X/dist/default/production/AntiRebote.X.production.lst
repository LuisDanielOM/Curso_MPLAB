

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jan 26 19:44:11 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    13   000000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000000                     _PORTBbits	set	3969
    50   000000                     _LATCbits	set	3979
    51   000000                     _TRISBbits	set	3987
    52   000000                     _ADCON1bits	set	4033
    53   000000                     _TRISCbits	set	3988
    54                           
    55                           ; #config settings
    56                           
    57                           	psect	cinit
    58   007F1E                     __pcinit:
    59                           	callstack 0
    60   007F1E                     start_initialization:
    61                           	callstack 0
    62   007F1E                     __initialization:
    63                           	callstack 0
    64                           
    65                           ; Clear objects allocated to COMRAM (4 bytes)
    66   007F1E  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
    67   007F20  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
    68   007F22  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    69   007F24  6A01               	clrf	__pbssCOMRAM& (0+255),c
    70   007F26                     end_of_initialization:
    71                           	callstack 0
    72   007F26                     __end_of__initialization:
    73                           	callstack 0
    74   007F26  0100               	movlb	0
    75   007F28  EF96  F03F         	goto	_main	;jump to C main() function
    76                           
    77                           	psect	bssCOMRAM
    78   000001                     __pbssCOMRAM:
    79                           	callstack 0
    80   000001                     _contador2:
    81                           	callstack 0
    82   000001                     	ds	2
    83   000003                     _contador1:
    84                           	callstack 0
    85   000003                     	ds	2
    86                           
    87                           	psect	cstackCOMRAM
    88   000005                     __pcstackCOMRAM:
    89                           	callstack 0
    90   000005                     ??_main:
    91                           
    92                           ; 1 bytes @ 0x0
    93   000005                     	ds	2
    94                           
    95 ;;
    96 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    97 ;;
    98 ;; *************** function _main *****************
    99 ;; Defined at:
   100 ;;		line 58 in file "AntiRebote.c"
   101 ;; Parameters:    Size  Location     Type
   102 ;;		None
   103 ;; Auto vars:     Size  Location     Type
   104 ;;		None
   105 ;; Return value:  Size  Location     Type
   106 ;;                  1    wreg      void 
   107 ;; Registers used:
   108 ;;		wreg, status,2, status,0
   109 ;; Tracked objects:
   110 ;;		On entry : 0/0
   111 ;;		On exit  : 0/0
   112 ;;		Unchanged: 0/0
   113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   114 ;;      Params:         0       0       0       0       0       0       0       0       0
   115 ;;      Locals:         0       0       0       0       0       0       0       0       0
   116 ;;      Temps:          2       0       0       0       0       0       0       0       0
   117 ;;      Totals:         2       0       0       0       0       0       0       0       0
   118 ;;Total ram usage:        2 bytes
   119 ;; This function calls:
   120 ;;		Nothing
   121 ;; This function is called by:
   122 ;;		Startup code after reset
   123 ;; This function uses a non-reentrant model
   124 ;;
   125                           
   126                           	psect	text0
   127   007F2C                     __ptext0:
   128                           	callstack 0
   129   007F2C                     _main:
   130                           	callstack 31
   131   007F2C                     
   132                           ;AntiRebote.c: 60:     ADCON1bits.PCFG=0x0F;
   133   007F2C  0E0F               	movlw	15
   134   007F2E  12C1               	iorwf	193,f,c	;volatile
   135   007F30                     
   136                           ;AntiRebote.c: 61:     TRISBbits.RB0 = 1;
   137   007F30  8093               	bsf	147,0,c	;volatile
   138   007F32                     
   139                           ;AntiRebote.c: 62:     TRISBbits.RB1 = 1;
   140   007F32  8293               	bsf	147,1,c	;volatile
   141   007F34                     
   142                           ;AntiRebote.c: 63:     TRISCbits.RC2 = 0;
   143   007F34  9494               	bcf	148,2,c	;volatile
   144   007F36                     
   145                           ;AntiRebote.c: 64:     TRISCbits.RC1 = 0;
   146   007F36  9294               	bcf	148,1,c	;volatile
   147   007F38                     
   148                           ;AntiRebote.c: 66:     LATCbits.LC2 = 0;
   149   007F38  948B               	bcf	139,2,c	;volatile
   150   007F3A                     
   151                           ;AntiRebote.c: 67:     LATCbits.LC1 = 0;
   152   007F3A  928B               	bcf	139,1,c	;volatile
   153   007F3C                     l722:
   154                           
   155                           ;AntiRebote.c: 71:         if(PORTBbits.RB0==1){
   156   007F3C  A081               	btfss	129,0,c	;volatile
   157   007F3E  EFA3  F03F         	goto	u11
   158   007F42  EFA5  F03F         	goto	u10
   159   007F46                     u11:
   160   007F46  EFA9  F03F         	goto	l22
   161   007F4A                     u10:
   162   007F4A                     
   163                           ;AntiRebote.c: 72:             contador1++;
   164   007F4A  4A03               	infsnz	_contador1^0,f,c
   165   007F4C  2A04               	incf	(_contador1+1)^0,f,c
   166                           
   167                           ;AntiRebote.c: 73:         }
   168   007F4E  EFC4  F03F         	goto	l23
   169   007F52                     l22:
   170   007F52  A281               	btfss	129,1,c	;volatile
   171   007F54  EFAE  F03F         	goto	u21
   172   007F58  EFB0  F03F         	goto	u20
   173   007F5C                     u21:
   174   007F5C  EFC4  F03F         	goto	l23
   175   007F60                     u20:
   176   007F60                     l25:
   177   007F60  B281               	btfsc	129,1,c	;volatile
   178   007F62  EFB5  F03F         	goto	u31
   179   007F66  EFB7  F03F         	goto	u30
   180   007F6A                     u31:
   181   007F6A  EFB0  F03F         	goto	l25
   182   007F6E                     u30:
   183   007F6E                     
   184                           ;AntiRebote.c: 76:             _delay((unsigned long)((50)*(48000000/4000.0)));
   185   007F6E  0E04               	movlw	4
   186   007F70  6E06               	movwf	(??_main+1)^0,c
   187   007F72  0E0C               	movlw	12
   188   007F74  6E05               	movwf	??_main^0,c
   189   007F76  0E34               	movlw	52
   190   007F78                     u67:
   191   007F78  2EE8               	decfsz	wreg,f,c
   192   007F7A  D7FE               	bra	u67
   193   007F7C  2E05               	decfsz	??_main^0,f,c
   194   007F7E  D7FC               	bra	u67
   195   007F80  2E06               	decfsz	(??_main+1)^0,f,c
   196   007F82  D7FA               	bra	u67
   197   007F84                     
   198                           ;AntiRebote.c: 77:             contador2++;
   199   007F84  4A01               	infsnz	_contador2^0,f,c
   200   007F86  2A02               	incf	(_contador2+1)^0,f,c
   201   007F88                     l23:
   202                           
   203                           ;AntiRebote.c: 82:         if(contador1==10){
   204   007F88  0E0A               	movlw	10
   205   007F8A  1803               	xorwf	_contador1^0,w,c
   206   007F8C  1004               	iorwf	(_contador1+1)^0,w,c
   207   007F8E  A4D8               	btfss	status,2,c
   208   007F90  EFCC  F03F         	goto	u41
   209   007F94  EFCE  F03F         	goto	u40
   210   007F98                     u41:
   211   007F98  EFE0  F03F         	goto	l740
   212   007F9C                     u40:
   213   007F9C                     
   214                           ;AntiRebote.c: 83:             LATCbits.LC2 = 1;
   215   007F9C  848B               	bsf	139,2,c	;volatile
   216   007F9E                     
   217                           ;AntiRebote.c: 84:             _delay((unsigned long)((100)*(48000000/4000.0)));
   218   007F9E  0E07               	movlw	7
   219   007FA0  6E06               	movwf	(??_main+1)^0,c
   220   007FA2  0E17               	movlw	23
   221   007FA4  6E05               	movwf	??_main^0,c
   222   007FA6  0E6A               	movlw	106
   223   007FA8                     u77:
   224   007FA8  2EE8               	decfsz	wreg,f,c
   225   007FAA  D7FE               	bra	u77
   226   007FAC  2E05               	decfsz	??_main^0,f,c
   227   007FAE  D7FC               	bra	u77
   228   007FB0  2E06               	decfsz	(??_main+1)^0,f,c
   229   007FB2  D7FA               	bra	u77
   230   007FB4  D000               	nop2	
   231   007FB6                     
   232                           ;AntiRebote.c: 85:             LATCbits.LC2=0;
   233   007FB6  948B               	bcf	139,2,c	;volatile
   234   007FB8                     
   235                           ;AntiRebote.c: 86:             contador1 = 0;
   236   007FB8  0E00               	movlw	0
   237   007FBA  6E04               	movwf	(_contador1+1)^0,c
   238   007FBC  0E00               	movlw	0
   239   007FBE  6E03               	movwf	_contador1^0,c
   240   007FC0                     l740:
   241                           
   242                           ;AntiRebote.c: 88:         if (contador2==10){
   243   007FC0  0E0A               	movlw	10
   244   007FC2  1801               	xorwf	_contador2^0,w,c
   245   007FC4  1002               	iorwf	(_contador2+1)^0,w,c
   246   007FC6  A4D8               	btfss	status,2,c
   247   007FC8  EFE8  F03F         	goto	u51
   248   007FCC  EFEA  F03F         	goto	u50
   249   007FD0                     u51:
   250   007FD0  EF9E  F03F         	goto	l722
   251   007FD4                     u50:
   252   007FD4                     
   253                           ;AntiRebote.c: 89:             LATCbits.LC1 = 1;
   254   007FD4  828B               	bsf	139,1,c	;volatile
   255   007FD6                     
   256                           ;AntiRebote.c: 90:             _delay((unsigned long)((100)*(48000000/4000.0)));
   257   007FD6  0E07               	movlw	7
   258   007FD8  6E06               	movwf	(??_main+1)^0,c
   259   007FDA  0E17               	movlw	23
   260   007FDC  6E05               	movwf	??_main^0,c
   261   007FDE  0E6A               	movlw	106
   262   007FE0                     u87:
   263   007FE0  2EE8               	decfsz	wreg,f,c
   264   007FE2  D7FE               	bra	u87
   265   007FE4  2E05               	decfsz	??_main^0,f,c
   266   007FE6  D7FC               	bra	u87
   267   007FE8  2E06               	decfsz	(??_main+1)^0,f,c
   268   007FEA  D7FA               	bra	u87
   269   007FEC  D000               	nop2	
   270   007FEE                     
   271                           ;AntiRebote.c: 91:             LATCbits.LC1=0;
   272   007FEE  928B               	bcf	139,1,c	;volatile
   273   007FF0                     
   274                           ;AntiRebote.c: 92:             contador2 = 0;
   275   007FF0  0E00               	movlw	0
   276   007FF2  6E02               	movwf	(_contador2+1)^0,c
   277   007FF4  0E00               	movlw	0
   278   007FF6  6E01               	movwf	_contador2^0,c
   279   007FF8  EF9E  F03F         	goto	l722
   280   007FFC  EF00  F000         	goto	start
   281   008000                     __end_of_main:
   282                           	callstack 0
   283   000000                     
   284                           	psect	rparam
   285   000000                     
   286                           	psect	idloc
   287                           
   288                           ;Config register IDLOC0 @ 0x200000
   289                           ;	unspecified, using default values
   290   200000                     	org	2097152
   291   200000  FF                 	db	255
   292                           
   293                           ;Config register IDLOC1 @ 0x200001
   294                           ;	unspecified, using default values
   295   200001                     	org	2097153
   296   200001  FF                 	db	255
   297                           
   298                           ;Config register IDLOC2 @ 0x200002
   299                           ;	unspecified, using default values
   300   200002                     	org	2097154
   301   200002  FF                 	db	255
   302                           
   303                           ;Config register IDLOC3 @ 0x200003
   304                           ;	unspecified, using default values
   305   200003                     	org	2097155
   306   200003  FF                 	db	255
   307                           
   308                           ;Config register IDLOC4 @ 0x200004
   309                           ;	unspecified, using default values
   310   200004                     	org	2097156
   311   200004  FF                 	db	255
   312                           
   313                           ;Config register IDLOC5 @ 0x200005
   314                           ;	unspecified, using default values
   315   200005                     	org	2097157
   316   200005  FF                 	db	255
   317                           
   318                           ;Config register IDLOC6 @ 0x200006
   319                           ;	unspecified, using default values
   320   200006                     	org	2097158
   321   200006  FF                 	db	255
   322                           
   323                           ;Config register IDLOC7 @ 0x200007
   324                           ;	unspecified, using default values
   325   200007                     	org	2097159
   326   200007  FF                 	db	255
   327                           
   328                           	psect	config
   329                           
   330                           ;Config register CONFIG1L @ 0x300000
   331                           ;	unspecified, using default values
   332                           ;	PLL Prescaler Selection bits
   333                           ;	PLLDIV = 0x0, unprogrammed default
   334                           ;	System Clock Postscaler Selection bits
   335                           ;	CPUDIV = 0x0, unprogrammed default
   336                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   337                           ;	USBDIV = 0x0, unprogrammed default
   338   300000                     	org	3145728
   339   300000  00                 	db	0
   340                           
   341                           ;Config register CONFIG1H @ 0x300001
   342                           ;	unspecified, using default values
   343                           ;	Oscillator Selection bits
   344                           ;	FOSC = 0x5, unprogrammed default
   345                           ;	Fail-Safe Clock Monitor Enable bit
   346                           ;	FCMEN = 0x0, unprogrammed default
   347                           ;	Internal/External Oscillator Switchover bit
   348                           ;	IESO = 0x0, unprogrammed default
   349   300001                     	org	3145729
   350   300001  05                 	db	5
   351                           
   352                           ;Config register CONFIG2L @ 0x300002
   353                           ;	Power-up Timer Enable bit
   354                           ;	PWRT = OFF, PWRT disabled
   355                           ;	Brown-out Reset Enable bits
   356                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   357                           ;	Brown-out Reset Voltage bits
   358                           ;	BORV = 3, Minimum setting 2.05V
   359                           ;	USB Voltage Regulator Enable bit
   360                           ;	VREGEN = OFF, USB voltage regulator disabled
   361   300002                     	org	3145730
   362   300002  19                 	db	25
   363                           
   364                           ;Config register CONFIG2H @ 0x300003
   365                           ;	Watchdog Timer Enable bit
   366                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   367                           ;	Watchdog Timer Postscale Select bits
   368                           ;	WDTPS = 32768, 1:32768
   369   300003                     	org	3145731
   370   300003  1E                 	db	30
   371                           
   372                           ; Padding undefined space
   373   300004                     	org	3145732
   374   300004  FF                 	db	255
   375                           
   376                           ;Config register CONFIG3H @ 0x300005
   377                           ;	CCP2 MUX bit
   378                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   379                           ;	PORTB A/D Enable bit
   380                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   381                           ;	Low-Power Timer 1 Oscillator Enable bit
   382                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   383                           ;	MCLR Pin Enable bit
   384                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   385   300005                     	org	3145733
   386   300005  81                 	db	129
   387                           
   388                           ;Config register CONFIG4L @ 0x300006
   389                           ;	Stack Full/Underflow Reset Enable bit
   390                           ;	STVREN = ON, Stack full/underflow will cause Reset
   391                           ;	Single-Supply ICSP Enable bit
   392                           ;	LVP = ON, Single-Supply ICSP enabled
   393                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   394                           ;	ICPRT = OFF, ICPORT disabled
   395                           ;	Extended Instruction Set Enable bit
   396                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   397                           ;	Background Debugger Enable bit
   398                           ;	DEBUG = 0x1, unprogrammed default
   399   300006                     	org	3145734
   400   300006  85                 	db	133
   401                           
   402                           ; Padding undefined space
   403   300007                     	org	3145735
   404   300007  FF                 	db	255
   405                           
   406                           ;Config register CONFIG5L @ 0x300008
   407                           ;	Code Protection bit
   408                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   409                           ;	Code Protection bit
   410                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   411                           ;	Code Protection bit
   412                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   413                           ;	Code Protection bit
   414                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   415   300008                     	org	3145736
   416   300008  0F                 	db	15
   417                           
   418                           ;Config register CONFIG5H @ 0x300009
   419                           ;	Boot Block Code Protection bit
   420                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   421                           ;	Data EEPROM Code Protection bit
   422                           ;	CPD = OFF, Data EEPROM is not code-protected
   423   300009                     	org	3145737
   424   300009  C0                 	db	192
   425                           
   426                           ;Config register CONFIG6L @ 0x30000A
   427                           ;	Write Protection bit
   428                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   429                           ;	Write Protection bit
   430                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   431                           ;	Write Protection bit
   432                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   433                           ;	Write Protection bit
   434                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   435   30000A                     	org	3145738
   436   30000A  0F                 	db	15
   437                           
   438                           ;Config register CONFIG6H @ 0x30000B
   439                           ;	Configuration Register Write Protection bit
   440                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   441                           ;	Boot Block Write Protection bit
   442                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   443                           ;	Data EEPROM Write Protection bit
   444                           ;	WRTD = OFF, Data EEPROM is not write-protected
   445   30000B                     	org	3145739
   446   30000B  E0                 	db	224
   447                           
   448                           ;Config register CONFIG7L @ 0x30000C
   449                           ;	Table Read Protection bit
   450                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   451                           ;	Table Read Protection bit
   452                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   453                           ;	Table Read Protection bit
   454                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   455                           ;	Table Read Protection bit
   456                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   457   30000C                     	org	3145740
   458   30000C  0F                 	db	15
   459                           
   460                           ;Config register CONFIG7H @ 0x30000D
   461                           ;	Boot Block Table Read Protection bit
   462                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   463   30000D                     	org	3145741
   464   30000D  40                 	db	64
   465                           tosu	equ	0xFFF
   466                           tosh	equ	0xFFE
   467                           tosl	equ	0xFFD
   468                           stkptr	equ	0xFFC
   469                           pclatu	equ	0xFFB
   470                           pclath	equ	0xFFA
   471                           pcl	equ	0xFF9
   472                           tblptru	equ	0xFF8
   473                           tblptrh	equ	0xFF7
   474                           tblptrl	equ	0xFF6
   475                           tablat	equ	0xFF5
   476                           prodh	equ	0xFF4
   477                           prodl	equ	0xFF3
   478                           indf0	equ	0xFEF
   479                           postinc0	equ	0xFEE
   480                           postdec0	equ	0xFED
   481                           preinc0	equ	0xFEC
   482                           plusw0	equ	0xFEB
   483                           fsr0h	equ	0xFEA
   484                           fsr0l	equ	0xFE9
   485                           wreg	equ	0xFE8
   486                           indf1	equ	0xFE7
   487                           postinc1	equ	0xFE6
   488                           postdec1	equ	0xFE5
   489                           preinc1	equ	0xFE4
   490                           plusw1	equ	0xFE3
   491                           fsr1h	equ	0xFE2
   492                           fsr1l	equ	0xFE1
   493                           bsr	equ	0xFE0
   494                           indf2	equ	0xFDF
   495                           postinc2	equ	0xFDE
   496                           postdec2	equ	0xFDD
   497                           preinc2	equ	0xFDC
   498                           plusw2	equ	0xFDB
   499                           fsr2h	equ	0xFDA
   500                           fsr2l	equ	0xFD9
   501                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2       6       1        6.3%
BITBIGSFRh          3E      0       0      21        0.0%
BITBIGSFRlh         2C      0       0      22        0.0%
BITBIGSFRllll       21      0       0      25        0.0%
BITBIGSFRlllh        9      0       0      24        0.0%
BITBIGSFRllh         7      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       6       3        0.0%
DATA                 0      0       6       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jan 26 19:44:11 2023

                     l22 7F52                       l23 7F88                       l25 7F60  
                     u10 7F4A                       u11 7F46                       u20 7F60  
                     u21 7F5C                       u30 7F6E                       u31 7F6A  
                     u40 7F9C                       u41 7F98                       u50 7FD4  
                     u51 7FD0                       u67 7F78                       u77 7FA8  
                     u87 7FE0                      l710 7F30                      l720 7F3A  
                    l712 7F32                      l730 7F84                      l722 7F3C  
                    l714 7F34                      l732 7F9C                      l740 7FC0  
                    l724 7F4A                      l716 7F36                      l708 7F2C  
                    l742 7FD4                      l734 7F9E                      l718 7F38  
                    l744 7FD6                      l736 7FB6                      l728 7F6E  
                    l746 7FEE                      l738 7FB8                      l748 7FF0  
                    wreg 000FE8                     _main 7F2C                     start 0000  
           ___param_bank 000000                    ?_main 0005                    status 000FD8  
        __initialization 7F1E             __end_of_main 8000                   ??_main 0005  
          __activetblptr 000000                   isa$std 000001               __accesstop 0060  
__end_of__initialization 7F26            ___rparam_used 000001           __pcstackCOMRAM 0005  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7F1E  
                __ramtop 0800                  __ptext0 7F2C     end_of_initialization 7F26  
              _PORTBbits 000F81                _TRISBbits 000F93                _TRISCbits 000F94  
    start_initialization 7F1E              __pbssCOMRAM 0001                _contador1 0003  
              _contador2 0001                 _LATCbits 000F8B               _ADCON1bits 000FC1  
               __Hrparam 0000                 __Lrparam 0000                 isa$xinst 000000  
